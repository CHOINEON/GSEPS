name: AI 이미지 빌드 및 ECR 업로드

on:
  workflow_dispatch:
  push:
    branches:
      - deploy
    paths:
      - "AI/**"

jobs:
  build-and-push-ai:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Retag Existing AI Image if Latest Exists
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}/ineeji-ai
          if docker pull $IMAGE_URI:latest; then
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            docker tag $IMAGE_URI:latest $IMAGE_URI:$TIMESTAMP
            docker push $IMAGE_URI:$TIMESTAMP
          fi

      - name: Build and Tag AI Docker Image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}/ineeji-ai:latest -f AI/Dockerfile.prod ./AI
          docker tag ${{ secrets.ECR_REPOSITORY }}/ineeji-ai:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}/ineeji-ai:latest

      - name: Push AI Docker Image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}/ineeji-ai:latest
